environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\scripts\\run_with_env.cmd"

    TWINE_USERNAME: DRMacIver
    TWINE_PASSWORD:
      secure: TpmpMHwgS4xxcbbzROle2xyb3i+VPP8cT5ZL4dF/UrA=

  matrix:
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.13"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.3"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.1"
      PYTHON_ARCH: "64"

# Appveyor "helpfully" ignores skip directives in the commit message body
# https://www.appveyor.com/docs/how-to/filtering-commits/#commit-message
skip_commits:
  message: /^Bump version to \d+\.\d+\.\d+ and update changelog/

# This matches both branches and tags (no, I don't know why either).
# We need a match both for pushes to master, and our release tags which
# trigger wheel builds.
branches:
  only:
    - master
    - v4
    - /^\d+\.\d+\.\d+$/

artifacts:
  - path: 'dist\*.whl'
    name: wheel

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./scripts/install.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "%CMD_IN_ENV% python -m pip.__main__ install --upgrade setuptools pip wheel twine"
  - "%CMD_IN_ENV% python -m pip.__main__ install setuptools -rrequirements/test.txt"
  - "%CMD_IN_ENV% python -m pip.__main__ install .[all]"
  - "%CMD_IN_ENV% python setup.py bdist_wheel --dist-dir dist"

deploy_script:
  - ps: "if ($env:APPVEYOR_REPO_TAG -eq $TRUE) { python -m twine upload dist/* }"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  - "%CMD_IN_ENV% python -m pytest -n 0 tests/cover"
  - "%CMD_IN_ENV% python -m pytest -n 0 tests/datetime"
  - "%CMD_IN_ENV% python -m pytest -n 0 tests/pytest -p pytester --runpytest subprocess"
